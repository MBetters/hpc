#include "mpi.h"
#include <stdio.h>
#include <stdlib.h>

#define MASTER 0

double avg(double* start, int len);
int main(int argc, char *argv[]){

	int numtasks;
	int taskid;
	int rc;
	int averageSum;
	
	double arr[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
	double* parr = arr;
	

	//double *meme = arr+2;
	//printf("%f", *meme);

	MPI_Status status;

	MPI_Init(&argc, &argv);
	MPI_Comm_size(MPI_COMM_WORLD,&numtasks);
	MPI_Comm_rank(MPI_COMM_WORLD,&taskid);
	printf("MPI task %d has started... \n\n", taskid);
	
	double thisAvg = avg(parr+(2*taskid),2);
	
	rc = MPI_Reduce(&thisAvg, &averageSum, 1, MPI_DOUBLE, MPI_SUM, MASTER, MPI_COMM_WORLD);
	
	if(rc != MPI_SUCCESS)
		printf("%d: falure on mpc_reduce\n",taskid);	

	//printf("Average is equal to %f \n", avg(parr+(2*taskid),2));
	

	if(taskid == MASTER){
			printf("MASTER TASK\n");
	}

	MPI_Finalize();
	return 0;
}

double avg(double* start, int len){
	return (*start+*(start+1))/2;
}
